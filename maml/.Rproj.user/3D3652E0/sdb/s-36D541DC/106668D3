{
    "contents" : "#############################################################\n# API URLs\n#############################################################\nwsURL = \"https://management-tm.azureml.net/workspaces/%s/webservices\"\nwsURLdet = \"https://management-tm.azureml.net/workspaces/%s/webservices/%s\"\nepURL = \"https://management-tm.azureml.net/workspaces/%s/webservices/%s/endpoints\"\nepURLdet = \"https://management-tm.azureml.net/workspaces/%s/webservices/%s/endpoints/%s\"\n\n# remove in real version\ntestURL = \"https://hiteshsm.cloudapp.net/workspaces/%s/webservices/%s/endpoints\"\ninternalURL = \"https://management.azureml-int.net/workspaces/%s/webservices/%s/endpoints\"\n\n#############################################################\n#' @title Get FrameWork\n#' @description\n#' Framework for making an HTTP request to the URL specified\n#' returns a list of lists, so that the elements can be accessed\n#' via double bracket notation\n#' @param tUrl The URL from the published web service\n#' @param authToken The authentication token for the AzureML account being used\n#' @return prints the framework\n#' @examples\n#' results[[1]]\n#############################################################\ngetFramework <- function(tUrl, authToken) {\n  # Collectors for API response\n  h = RCurl::basicTextGatherer()\n  hdr = RCurl::basicTextGatherer()\n\n  # Accept SSL certificates issued by public Certificate Authorities\n  options(RCurlOptions = list(cainfo = system.file(\"CurlSSL\", \"cacert.pem\", package = \"RCurl\")))\n\n  # Craft request header and execute\n  auth = paste('Bearer', authToken, sep=' ')\n  h$reset()\n  RCurl::curlPerform(url = tUrl,\n              httpheader=c('Authorization' = auth, 'Content-Type' = \"application/json\", 'Accept' = \"application/json\"),\n              writefunction = h$update,\n              headerfunction = hdr$update,\n              verbose = TRUE,\n              ssl.verifyHost = FALSE,\n              ssl.verifyPeer = FALSE)\n\n  # Print results\n  return(RJSONIO::fromJSON(h$value()))\n}\n\n\n\n#############################################################\n#' @title Get Web Services\n#' @description Get a list of webservices available to a workspace\n#'\n#' @param wkID The workspace ID\n#' @param authToken The primary authorization token\n#' @return Returns a list of lists, where each web service is represented\n#' as a nested named list with the following fields:\n#' \"Id\", \"Name\", \"Description\", \"CreationTime\", \"WorkspaceId\", \"DefaultEndpointName\"\n#' @examples\n#' DELETE TOKENS IN REAL VERSION\n#' services = getWebServices(\"c01fb89129aa4ef0a19affa7f95ecbbc\", \"523709d06661441bbf129d68f84cd6a4\")\n#' serviceID = services[[1]][\"Id\"]\n#############################################################\ngetWebServices <- function(wkID, authToken, url=wsURL) {\n  return(getFramework(sprintf(url, wkID), authToken))\n}\n\n\n\n#############################################################\n#' @title Get Workspace Details\n#' @description Get detailed information about a specific webservice\n#'\n#' @param wkID The workspace ID\n#' @param authToken The primary authorization token\n#' @param wsID The webservice ID\n#' @return Returns a named list representing the web service\n#' with the following fields:\n#' \"Id\", \"Name\", \"Description\", \"CreationTime\", \"WorkspaceId\", \"DefaultEndpointName\"\n#' @examples\n#' << Please note that you will need to retrieve all of the signature details from your AzureML account >>\n#' services = getWebServices(\"abcdefghijklmnopqrstuvwxyz123456\", \"abcdefghijklmnopqrstuvwxyz123456\")\n#############################################################\ngetWSDetails <- function(wkID, authToken, wsID, url=wsURLdet) {\n  return(getFramework(sprintf(url, wkID, wsID), authToken))\n}\n\n\n\n#############################################################\n#' @title Get Endpoints\n#' @description Get the endpoints that are part of a web service\n#'\n#' @param wkID The workspace ID\n#' @param authToken The primary authorization token\n#' @param wsID The webservice ID\n#' @return Returns a list of lists, where each endpoint is represented\n#' as a nested named list with the following fields:\n#' \"Name\", \"Description\", \"CreationTime\", \"WorkspaceId\", \"WebServiceId\",\n#' \"HelpLocation\", \"PrimaryKey\", \"SecondaryKey\", \"ApiLocation\", \"Version\",\n#' \"MaxConcurrentCalls\", \"DiagnosticsTraceLevel\", \"ThrottleLevel\"\n#' @examples\n#' << Please note that you will need to retrieve all of the signature details from your AzureML account >>\n#' endpoints = getEndpoints(\"abcdefghijklmnopqrstuvwxyz123456\", \"abcdefghijklmnopqrstuvwxyz123456\", \"abcdefghijklmnopqrstuvwxyz123456\")\n#############################################################\ngetEndpoints <- function(wkID, authToken, wsID, url=epURL) {\n  return(getFramework(sprintf(url, wkID, wsID), authToken))\n}\n\n\n\n#############################################################\n#' @title get EndPoint Details\n#' @description Get the details on a specific endpoint\n#'\n#' @param wkID The workspace ID\n#' @param authToken The primary authorization token\n#' @param wsID The webservice ID\n#' @param epID The endpoint name\n#' @return Returns a named list representing the endpoint with the following fields:\n#' \"Name\", \"Description\", \"CreationTime\", \"WorkspaceId\", \"WebServiceId\",\n#' \"HelpLocation\", \"PrimaryKey\", \"SecondaryKey\", \"ApiLocation\", \"Version\",\n#' \"MaxConcurrentCalls\", \"DiagnosticsTraceLevel\", \"ThrottleLevel\"\n#' @examples\n#' << Please note that you will need to retrieve all of the signature details from your AzureML account >>\n#' defaultEP = getEPDetails(\"abcdefghijklmnopqrstuvwxyz123456\", \"abcdefghijklmnopqrstuvwxyz123456\", \"abcdefghijklmnopqrstuvwxyz123456\", \"default\")\n#############################################################\ngetEPDetails <- function(wkID, authToken, wsID, epID, url=epURLdet) {\n  return(getFramework(sprintf(url, wkID, wsID, epID), authToken))\n}\n",
    "created" : 1437761670390.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2257308344",
    "id" : "106668D3",
    "lastKnownWriteTime" : 1437761411,
    "path" : "~/GitHub/Azure-MachineLearning-ClientLibrary-R/maml/R/discover.R",
    "project_path" : "R/discover.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}