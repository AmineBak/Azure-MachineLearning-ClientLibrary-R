{
    "contents" : "testing <- publishWebService(\"add\", \"e2eTest2\", list(\"icol1\"=\"int\"), list(\"ocol1\"=\"int\"), wsID, auth)\nendpoint <- getEndpointsT(wsID, auth, testing[\"Id\"])\nconsumeSingleRequest(endpoint[[1]][\"PrimaryKey\"], paste(endpoint[[1]][\"ApiLocation\"],\"/execute?api-version=2.0&details=true\",sep=\"\"), list(\"icol1\"), list(1))\n\n\"inputDF <- maml.mapInputPort(1)\\r\\noutputDF <- data.frame(matrix(ncol = %s, nrow = nrow(inputDF)))\\r\\nfor (file in list.files(\\\"src\\\")) {\\r\\n  if (file == \\\"%s\\\") {\\r\\n    load(\\\"src/%s\\\")\\r\\n    for (item in names(dependencies)) {\\r\\n      assign(item, dependencies[[item]])\\r\\n    }\\r\\n  }\\r\\n  else {\\r\\n    if (!(file %%in%% installed.packages()[,\\\"Package\\\"])) {\\r\\n      install.packages(file, lib=\\\".\\\", repos=NULL, verbose=TRUE)\\r\\n    }\\r\\n    library(file, character.only=TRUE)\\r\\n  }\\r\\n}\\r\\naction <- %s\\r\\n  for (i in 1:nrow(inputDF)) {\\r\\n    outputDF[i,] <- do.call(\\\"action\\\", as.list(inputDF[i,]))\\r\\n  }\\r\\nmaml.mapOutputPort(\\\"outputDF\\\")\"\n\n# No zip file / opening of dependencies\n\"inputDF <- maml.mapInputPort(1)\\r\\noutputDF <- data.frame(matrix(ncol = %s, nrow = nrow(inputDF)))\\r\\naction <- %s\\r\\n  for (i in 1:nrow(inputDF)) {\\r\\n    outputDF[i,] <- do.call(\\\"action\\\", as.list(inputDF[i,]))\\r\\n  }\\r\\nmaml.mapOutputPort(\\\"outputDF\\\")\"\n\n\"outputDF <- data.frame(list.files(\\\"src\\\"))\\r\\nmaml.mapOutputPort(\\\"outputDF\\\")\"\n\"inputDF <- maml.mapInputPort(1)\\r\\noutputDF <- data.frame(list.files(\\\"src\\\")\\r\\nmaml.mapOutputPort(\\\"outputDF\\\")\"\n",
    "created" : 1435701157077.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1984553143",
    "id" : "1AB13A5A",
    "lastKnownWriteTime" : 1435786168,
    "path" : "~/Azure-MachineLearning-ClientLibrary-R/maml/R/testing.R",
    "project_path" : "R/testing.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}