{
    "contents" : "install.packages(\"testit\")\nlibrary(\"testit\")\n\n########################################################### TITANIC TESTS ###########################################################\n\n#Test titanic model\ntitanicWebService <- publishWebService(\"predictTitanicSurvival\", \"TestTitanic\", list(\"Pclass\"=\"string\", \"Sex\"=\"string\", \"Age\"=\"int\", \"SibSp\"=\"int\", \"Parch\"=\"int\", \"Fare\"=\"float\"), list(\"survProb\"=\"float\"), wsID, wsAuth)\n\n# Use getEndpoints method\n# endpoints <- getEndpoints(wsID, wsAuth, titanicWebService[[1]][\"Id\"], internalURL)\n# Access results from return value of publish method\ntitanicEndpoints <- titanicWebService[[2]]\n\n#May take long since servers are getting warmed up\ntitanicConsumeSingleRows <- consumeDataTable(titanicEndpoints[[1]][\"PrimaryKey\"], paste(titanicEndpoints[[1]][\"ApiLocation\"], \"/execute?api-version=2.0&details=true\",sep=\"\"), list(\"Pclass\", \"Sex\", \"Age\", \"SibSp\", \"Parch\", \"Fare\"), list(1, \"male\", 20, 2, 0, 8.50), list(1, \"female\", 20, 1, 0, 8.50))\n\n# consume with inputs as dataframe\n# creating test data.frame\ntitanicDF <- data.frame(\"Pclass\"=c(1,2,1), \"Sex\"=c(\"male\",\"female\",\"male\"), \"Age\"=c(8,20, 30), \"Parch\"=c(1,1,1), \"SibSp\"=c(1,3,1), \"Fare\"=c(10,7.5, 9))\nTitanicConsumeDF <- consumeDataframe(titanicWebService[[2]][[1]]$PrimaryKey, paste(titanicWebService[[2]][[1]]$ApiLocation,\"/execute?api-version=2.0&details=true\",sep=\"\"), titanicDF)\n\n############################################################# IRIS TESTS #############################################################\n#Publish iris prediction function\nirisWebService <- publishWebService(\"predictClass\", \"TestIris\", list(\"sepalLength\"=\"float\", \"sepalWidth\"=\"float\", \"petalLength\"=\"float\", \"petalWidth\"=\"float\"), list(\"class\"=\"int\"), wsID, wsAuth)\n\n#Test discovery method getEndpoints\nirisEndpoints <- irisWebService[[2]]\n\n#Consume single request\nirisConsumeSingleRows <- consumeDataTable(irisEndpoints[[1]][\"PrimaryKey\"], paste(irisEndpoints[[1]][\"ApiLocation\"], \"/execute?api-version=2.0&details=true\",sep=\"\"), list(\"sepalLength\", \"sepalWidth\", \"petalLength\", \"petalWidth\"), list(5, 5, 4, 3), list(4.5, 6.5, 4.5, 2))\n\n#Consume data frame\nirisDF <- data.frame(\"sepalLength\"=c(1,2,3), \"sepalWidth\"=c(4,5,6), \"petalLength\"=c(7,8,9), \"petalWidth\"=c(10,11,12))\nirisConsumeDF <- consumeDataframe(irisWebService[[2]][[1]]$PrimaryKey, paste(irisWebService[[2]][[1]]$ApiLocation,\"/execute?api-version=2.0&details=true\",sep=\"\"), irisDF)\n\n############################################################# MSFTPREDICT TESTS #############################################################\n\n#Publish MSFT prediction function\nmsftWebService <- publishWebService(\"MSFTpredict\", \"MSFTdemo\", list(\"close\"=\"float\", \"volume\"=\"float\"), list(\"number\"=\"float\"), wsID, wsAuth)\n\n#Publish \nmsftEndpoints <- msftWebService[[2]]\n\nmsftConsumeSingleRows <- consumeDataTable(msftEndpoints[[1]][\"PrimaryKey\"], paste(msftEndpoints[[1]][\"ApiLocation\"], \"/execute?api-version=2.0&details=true\",sep=\"\"), list(\"close\", \"volume\"), list(25, 300), list(30, 100))\n\nmsftDF <- data.frame(\"close\"=c(107,208,300), \"volume\"=c(400,569,665))\nmsftConsumeDF <- consumeDataframe(msftWebService[[2]][[1]]$PrimaryKey, paste(msftWebService[[2]][[1]]$ApiLocation,\"/execute?api-version=2.0&details=true\",sep=\"\"), msftDF)\n",
    "created" : 1437769752141.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2062609378",
    "id" : "AD76F595",
    "lastKnownWriteTime" : 1437610654,
    "path" : "~/Azure-MachineLearning-ClientLibrary-R/tests/testAuto.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_source"
}