% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/consume.R, R/consumeRRS.R
\name{consumeLists}
\alias{consumeLists}
\title{Consume Lists}
\usage{
consumeLists(apiKey, requestUrlDataTable, ..., globalParam = setNames(list(),
  character(0)), retryDelay = 0.3)

consumeLists(apiKey, requestUrlDataTable, ..., globalParam = setNames(list(),
  character(0)), retryDelay = 0.3)
}
\arguments{
\item{apiKey}{entered as a string}

\item{requestUrlDataTable}{request URL entered as a string or discovered through the discover schema method}

\item{...}{each parameter must be a request in the format of a list that contains a row of values corresponding to the column names provided}

\item{globalParam}{global parameters entered as a list, default value is an empty list}

\item{retryDelay}{the time in seconds to delay before retrying in case of a server error, default value is 0.3 seconds}

\item{string}{The api key must be entered as the first parameter}

\item{string}{requestURL must be entered as the third parameter}

\item{list}{columnNames - column Names}

\item{string}{globalParam - global parameters, default value is ""}

\item{int}{retryDelay the time in seconds to delay before retrying in case of a server error, default value of 0.3 seconds}

\item{...}{variable number of requests entered as lists in the key-value format}
}
\value{
results in a list of lists, with the scored probability at the end of each list
#add example

returnDataFrame data frame containing results returned from web service call
}
\description{
This function takes in an API key, the request URL (OData Endpoint Address), the column names and multiple requests
It scores the experiment with the requests stored in a list of lists, and sends it to the server in the appropriate format.
It then obtains a response from Azure Machine Learning Studio and returns a response to the user. It returns the output column(s) along with the scored probablities!

This function takes in an API key, request URL, requests as lists in the key value format as compulsory parameters.
It scores requests with lists entered in the key-value format and returns results in a data frame.
It calls a helper function that sends requests to the server in the key value format.
It processes requests in batches and stores the responses in order of batches in an array. It returns the results in a data frame.
}

