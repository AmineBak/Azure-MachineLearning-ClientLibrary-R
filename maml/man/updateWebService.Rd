% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/publish.R
\name{updateWebService}
\alias{updateWebService}
\title{Update a Published Web Service}
\usage{
updateWebService(functionName, serviceGUID, inputSchema, outputSchema, wkID,
  authToken)
}
\arguments{
\item{string}{functionName - The function that is being updated}

\item{string}{serviceGUID - The name they would like the function published under
((Note: cannot change the service name))}

\item{list}{inputSchema - List of expected input parameters
expecting inputSchema = list("arg1"="type", "arg2"="type", ...)}

\item{list}{outputSchema - List of expected output
expecting outputSchema = list("output1"="type", "output2"="type", ...)}

\item{string}{wkID - The workspace ID}

\item{string}{authToken - The primary authorization token}
}
\value{
List of webservice details, default endpoint details, and the consumption function
}
\description{
This function updates published code given a valid workspace ID and authentication token. The function expects the function name, service id, and
the input and output schemas from the user.
The user can expect a list of the web service details, the default endpoint details and the consumption function and use this information to access
the published function.
}
\examples{
# create a function to make predictions using the trained model
I.e. predictTitanic <- function (Pclass, Sex, Age, SibSp, Parch, Fare)
# Sample local call
predictTitanic(1, "male", 20, 2, 0, 8.50)
# Publish the function
TitanicService <- publishWebService("predictTitanic", "TitanicDemo", list("Pclass"="string", "Sex"="string", "Age"="int", "SibSp"="int", "Parch"="int", "Fare"="float"), list("survProb"="float"), wsID, wsAuth)
# Let's say that predictTitanic was updated to add more functionality now and we want to republish
TitanicService <- updateWebService("predictTitanic", "TitanicDemo", list("Pclass"="string", "Sex"="string", "Age"="int", "SibSp"="int", "Parch"="int", "Fare"="float"), list("survProb"="float"), wsID, wsAuth)
}

